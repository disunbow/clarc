.TH CLARC "1" "" "clarc" "User Commands"
.SH NAME
clarc \- sync local files to Amazon S3 cloud storage
.SH SYNOPSIS
.B clarc
[\fIOPTION\fR]... \fISOURCE\fR \fIDEST\fR
.SH DESCRIPTION
.B clarc
is a utility that synchronizes local file system folder to Amazon S3. Only files that were changed/added since last 
.B clarc 
invocation will be uploaded.

.B clarc 
keeps track of changes by storing file metadata in a small local database. It possible to rebuild the database from Amazon S3.

.SH SOURCE
\fISOURCE\fR is the path to folder that is being uploaded.
.SH DEST
\fIDEST\fR is the Amazon S3 destination in format:

  s3://BUCKET[.ENDPOINT]/[FOLDER]

For example, 

  s3://test.egorfine.com/
  s3://test.egorfine.com.s3.amazonaws.com/
  s3://something.else.net.s3-ap-southeast-1.amazonaws.com/pictures/
.SH PATH OPTIONS
.PP
.TP
\fB\-\-exclude <pattern> 
Ignore certain files/folders according to the Regular Expression pattern. There could be more than a single --exclude argument.
.TP
\fB\-\-excludeFromFile <path>
The same as --exclude but will read a list of exclude patterns from file instead of the command-line argument. The patterns in the file must be newline-separated.
.SH AMAZON S3 OPTIONS
.PP
.TP
\fB\-\-rebuild\fR
Download files list and meta information from Amazon S3 and rebuild local database from scratch. This is done before uploading begins.
.TP
\fB\-\-delete\fR
Delete files from S3 which have been deleted locally. This is performed after upload. This option cannot be specified with --rebuildOnly. 
.TP
\fB\-\-accessKeyId <string>
.B (*) 
Amazon S3 Access Key ID. You can also specify it in S3_ACCESSKEYID environment variable instead of the command line.
.TP
\fB\-\-secretAccessKeyId <string> 
.B (*) 
Amazon S3 Secret Access Key. You can also specify it in S3_SECRETACCESSKEY environment variable instead of the command line.
.TP
\fB\-\-rrs
Use Reduced Redundancy Storage for Amazon S3, which is recommended for backups. RRS is cheaper and lost files will be restored anyway with a 
.B --rebuild.
By default the Standard storage is used. 
.TP
\fB\-\-public
Make all files publically avaialble on S3. By default all files are only accessible by the Amazon S3 account owner.
.TP
\fB\-\-create <region>
Create bucket in case it doesn't exist. Region is one of: US (default), EU, eu-west-1, us-west-1, us-west-2, ap-southeast-1, ap-northeast-1, sa-east-1. Bucket is always created with private ACL. 
.TP
\fB\-\-skipSsl
Do not use SSL when connecting to S3. Useful if you are connecting within AWS.
.SH DISPLAY OPTIONS
.PP
.TP
\fB\-\-progress 
Show progress indicator for meta update and uploads.
.TP
\fB\-\-logLevel <int>
Set stdout log level. Possible values are: 
.B 1: 
only fatals;
.B 2:
+errors;
.B 3:
+warnings;
.B 4:
+info;
.B 5:
debug.
Default is 2 (fatals and errors). 
.SH METADATA STORAGE OPTIONS
.PP
.TP
\fB\-\-dbPath <path>
Absolute path to local database file instead
of the default path. by default it's stored 
in the 
.B --source 
folder. 
.B WARNING: 
This option must not specify file name. 
.TP
\fB\-\-dbFilename <filename>
File name for the database. Default: '.clarc.sqlite3'.
.SH NETWORK OPTIONS
.PP
.TP
\fB\-\-uploadThreads <int>
Count of threads to spawn for upload. Default: 4.
.TP
\fB\-\-connectTimeout <seconds>
Timeout for connect operation only, in seconds. Default: 15.
.TP
\fB\-\-networkTimeout <seconds>
How many seconds to wait till the stalled connection should be killed. Default: 15.
.SH MISC OPTIONS
.PP
.TP
\fB\-\-dryRun
Do not actually upload files; do not actually rebuild database. 
\fB\-\-rebuildOnly
Do not actually upload files, only run --rebuild.
.TP 
\fB\-\-version
.TP
\fB\-\-help
.SH EXAMPLES
See documentation for examples; this is a single one.

  clarc --rebuild 
        --accessKeyId UKIOIZZADUGFFDD7SFVF 
        --secretAccessKey sDFGsvSVsd5S47hbBFfGfa634CbAs0Q4V547bGGa  
        /home/egor/Music/Dubstep  s3://music.egorfine.com/shit
.SH AUTHOR
Copyright \(co 2012 Egor Egorov  <me@egorfine.com>
.SH REPORTING BUGS
Report bugs to <me@egorfine.com> or in the Github issue tracker at https://github.com/egorFiNE/clarc/issues
.SH LICENSE (MIT)
Copyright \(co 2012 Egor Egorov  <me@egorfine.com>

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

